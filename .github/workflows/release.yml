name: Build & Release

on:
  push:
    tags:
      - 'v*'        # Run on version tags
  push:
    branches:
      - 'macos-build'        # Run on macos branch (for testing)
  workflow_dispatch: # Allow manual builds via GitHub UI (no release)

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller
        shell: bash

      - name: Build executable
        run: |
          pyinstaller --onefile --windowed code2clip.py
        shell: bash

      - name: Package for target OS
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            APP_NAME=Code2Clip
            APP_DIR=dist/$APP_NAME.app
            ZIP_PATH=dist/$APP_NAME-macos.zip

            mkdir -p "$APP_DIR/Contents/MacOS"
            mkdir -p "$APP_DIR/Contents/Resources"

            # Move the binary
            mv dist/code2clip "$APP_DIR/Contents/MacOS/code2clip"
            chmod +x "$APP_DIR/Contents/MacOS/code2clip"

            # Create Info.plist
            cat > "$APP_DIR/Contents/Info.plist" <<EOF
            <?xml version="1.0" encoding="UTF-8"?>
            <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
            <plist version="1.0">
            <dict>
              <key>CFBundleName</key>
              <string>Code2Clip</string>
              <key>CFBundleExecutable</key>
              <string>code2clip</string>
              <key>CFBundleIdentifier</key>
              <string>fi.dynamint.code2clip</string>
              <key>CFBundleVersion</key>
              <string>1.0</string>
              <key>CFBundlePackageType</key>
              <string>APPL</string>
            </dict>
            </plist>
            EOF

            # Zip the .app bundle for download
            cd dist
            zip -r Code2Clip-macos.zip Code2Clip.app
            cd ..

            echo "BINARY_PATH=dist/Code2Clip-macos.zip" >> $GITHUB_ENV

          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            mv dist/code2clip dist/code2clip-linux
            echo "BINARY_PATH=dist/code2clip-linux" >> $GITHUB_ENV

          else
            echo "BINARY_PATH=dist/code2clip.exe" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          name: Code2Clip-${{ matrix.os }}
          path: ${{ env.BINARY_PATH }}
          compression-level: 0
          if-no-files-found: error

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: binaries
          merge-multiple: true

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: binaries/**
          token: ${{ secrets.GH_PAT }}
